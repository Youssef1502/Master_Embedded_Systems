
Lab 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001cc  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  4 .ARM          00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002fc  080002fc  000102fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000300  08000300  00010300  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000304  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000304  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010304  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000104  00000000  00000000  0001032d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000007c  00000000  00000000  00010431  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000000f8  00000000  00000000  000104ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000060  00000000  00000000  000105a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000048  00000000  00000000  00010608  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00000f4a  00000000  00000000  00010650  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000443  00000000  00000000  0001159a  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00003d00  00000000  00000000  000119dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  000156dd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000b8  00000000  00000000  00015758  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002e4 	.word	0x080002e4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002e4 	.word	0x080002e4

08000170 <Clock_Init>:
// NVIC  ( Nested vectored interrupt controller )
#define  NVIC_EXTI0  *((volatile uint32_t *)(0xE000E100))


void Clock_Init ()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	// Enable Clock GPIOA
	RCC_APB2ENR |= (1<<2);
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <Clock_Init+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a06      	ldr	r2, [pc, #24]	; (8000194 <Clock_Init+0x24>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]

	// Bit 0 AFIOEN: Alternate function I/O clock enable
	RCC_APB2ENR |= (1<<0);
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <Clock_Init+0x24>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a03      	ldr	r2, [pc, #12]	; (8000194 <Clock_Init+0x24>)
 8000186:	f043 0301 	orr.w	r3, r3, #1
 800018a:	6013      	str	r3, [r2, #0]
}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40021018 	.word	0x40021018

08000198 <GPIO_Init>:

void GPIO_Init()
{
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	// pin 13 port A output
    GPIOA_CRH &= 0xFF0FFFFF;
 800019c:	4b0a      	ldr	r3, [pc, #40]	; (80001c8 <GPIO_Init+0x30>)
 800019e:	681b      	ldr	r3, [r3, #0]
 80001a0:	4a09      	ldr	r2, [pc, #36]	; (80001c8 <GPIO_Init+0x30>)
 80001a2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80001a6:	6013      	str	r3, [r2, #0]
    GPIOA_CRH |= 0x00200000;
 80001a8:	4b07      	ldr	r3, [pc, #28]	; (80001c8 <GPIO_Init+0x30>)
 80001aa:	681b      	ldr	r3, [r3, #0]
 80001ac:	4a06      	ldr	r2, [pc, #24]	; (80001c8 <GPIO_Init+0x30>)
 80001ae:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001b2:	6013      	str	r3, [r2, #0]

    // pinA 0 : Floating input (reset state)
    GPIOA_CRL |= (1<<2);
 80001b4:	4b05      	ldr	r3, [pc, #20]	; (80001cc <GPIO_Init+0x34>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	4a04      	ldr	r2, [pc, #16]	; (80001cc <GPIO_Init+0x34>)
 80001ba:	f043 0304 	orr.w	r3, r3, #4
 80001be:	6013      	str	r3, [r2, #0]
}
 80001c0:	bf00      	nop
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bc80      	pop	{r7}
 80001c6:	4770      	bx	lr
 80001c8:	40010804 	.word	0x40010804
 80001cc:	40010800 	.word	0x40010800

080001d0 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler()
{
 80001d0:	b480      	push	{r7}
 80001d2:	af00      	add	r7, sp, #0
	// Interrupt is Happened
	// EXTI0  >>>  PORTA Pin 0  ( Rising Edge )
	// Toggle Led Pin A 13
	GPIOA_ODR ^= (1<<13);
 80001d4:	4b09      	ldr	r3, [pc, #36]	; (80001fc <EXTI0_IRQHandler+0x2c>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a08      	ldr	r2, [pc, #32]	; (80001fc <EXTI0_IRQHandler+0x2c>)
 80001da:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80001de:	6013      	str	r3, [r2, #0]

	// Clear Pending Request for Line 0  ( rc_w1 )
	EXTI_PR |= (1<<0) ;
 80001e0:	4b07      	ldr	r3, [pc, #28]	; (8000200 <EXTI0_IRQHandler+0x30>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4a06      	ldr	r2, [pc, #24]	; (8000200 <EXTI0_IRQHandler+0x30>)
 80001e6:	f043 0301 	orr.w	r3, r3, #1
 80001ea:	6013      	str	r3, [r2, #0]

	// EXTI0 configuration to PortA0
	AFIO_EXTICR1 = 0 ;
 80001ec:	4b05      	ldr	r3, [pc, #20]	; (8000204 <EXTI0_IRQHandler+0x34>)
 80001ee:	2200      	movs	r2, #0
 80001f0:	601a      	str	r2, [r3, #0]


}
 80001f2:	bf00      	nop
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	4001080c 	.word	0x4001080c
 8000200:	40010414 	.word	0x40010414
 8000204:	40010008 	.word	0x40010008

08000208 <main>:

int main()
{
 8000208:	b580      	push	{r7, lr}
 800020a:	af00      	add	r7, sp, #0
	Clock_Init();
 800020c:	f7ff ffb0 	bl	8000170 <Clock_Init>
	GPIO_Init();
 8000210:	f7ff ffc2 	bl	8000198 <GPIO_Init>

	// Enable ExTI Line 0 ( Mask 1 )
	EXTI_IMR  |=  (1<<0) ;
 8000214:	4b09      	ldr	r3, [pc, #36]	; (800023c <main+0x34>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a08      	ldr	r2, [pc, #32]	; (800023c <main+0x34>)
 800021a:	f043 0301 	orr.w	r3, r3, #1
 800021e:	6013      	str	r3, [r2, #0]

	// Enable Rising Trigger
	EXTI_RTSR |=  (1<<0) ;
 8000220:	4b07      	ldr	r3, [pc, #28]	; (8000240 <main+0x38>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a06      	ldr	r2, [pc, #24]	; (8000240 <main+0x38>)
 8000226:	f043 0301 	orr.w	r3, r3, #1
 800022a:	6013      	str	r3, [r2, #0]

	// Enable NVIC IRQ6  <<>>  EXTI0  ( From Interrupt Vector Table )
	NVIC_EXTI0 |= (1<<6) ;
 800022c:	4b05      	ldr	r3, [pc, #20]	; (8000244 <main+0x3c>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a04      	ldr	r2, [pc, #16]	; (8000244 <main+0x3c>)
 8000232:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000236:	6013      	str	r3, [r2, #0]



	while(1);
 8000238:	e7fe      	b.n	8000238 <main+0x30>
 800023a:	bf00      	nop
 800023c:	40010400 	.word	0x40010400
 8000240:	40010408 	.word	0x40010408
 8000244:	e000e100 	.word	0xe000e100

08000248 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000248:	480d      	ldr	r0, [pc, #52]	; (8000280 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800024c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000250:	480c      	ldr	r0, [pc, #48]	; (8000284 <LoopForever+0x6>)
  ldr r1, =_edata
 8000252:	490d      	ldr	r1, [pc, #52]	; (8000288 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000254:	4a0d      	ldr	r2, [pc, #52]	; (800028c <LoopForever+0xe>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000258:	e002      	b.n	8000260 <LoopCopyDataInit>

0800025a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800025c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025e:	3304      	adds	r3, #4

08000260 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000260:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000262:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000264:	d3f9      	bcc.n	800025a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000266:	4a0a      	ldr	r2, [pc, #40]	; (8000290 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000268:	4c0a      	ldr	r4, [pc, #40]	; (8000294 <LoopForever+0x16>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800026c:	e001      	b.n	8000272 <LoopFillZerobss>

0800026e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000270:	3204      	adds	r2, #4

08000272 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000272:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000274:	d3fb      	bcc.n	800026e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000276:	f000 f811 	bl	800029c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027a:	f7ff ffc5 	bl	8000208 <main>

0800027e <LoopForever>:

LoopForever:
    b LoopForever
 800027e:	e7fe      	b.n	800027e <LoopForever>
  ldr   r0, =_estack
 8000280:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000284:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000288:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800028c:	08000304 	.word	0x08000304
  ldr r2, =_sbss
 8000290:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000294:	2000001c 	.word	0x2000001c

08000298 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000298:	e7fe      	b.n	8000298 <ADC1_2_IRQHandler>
	...

0800029c <__libc_init_array>:
 800029c:	b570      	push	{r4, r5, r6, lr}
 800029e:	2500      	movs	r5, #0
 80002a0:	4e0c      	ldr	r6, [pc, #48]	; (80002d4 <__libc_init_array+0x38>)
 80002a2:	4c0d      	ldr	r4, [pc, #52]	; (80002d8 <__libc_init_array+0x3c>)
 80002a4:	1ba4      	subs	r4, r4, r6
 80002a6:	10a4      	asrs	r4, r4, #2
 80002a8:	42a5      	cmp	r5, r4
 80002aa:	d109      	bne.n	80002c0 <__libc_init_array+0x24>
 80002ac:	f000 f81a 	bl	80002e4 <_init>
 80002b0:	2500      	movs	r5, #0
 80002b2:	4e0a      	ldr	r6, [pc, #40]	; (80002dc <__libc_init_array+0x40>)
 80002b4:	4c0a      	ldr	r4, [pc, #40]	; (80002e0 <__libc_init_array+0x44>)
 80002b6:	1ba4      	subs	r4, r4, r6
 80002b8:	10a4      	asrs	r4, r4, #2
 80002ba:	42a5      	cmp	r5, r4
 80002bc:	d105      	bne.n	80002ca <__libc_init_array+0x2e>
 80002be:	bd70      	pop	{r4, r5, r6, pc}
 80002c0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002c4:	4798      	blx	r3
 80002c6:	3501      	adds	r5, #1
 80002c8:	e7ee      	b.n	80002a8 <__libc_init_array+0xc>
 80002ca:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002ce:	4798      	blx	r3
 80002d0:	3501      	adds	r5, #1
 80002d2:	e7f2      	b.n	80002ba <__libc_init_array+0x1e>
 80002d4:	080002fc 	.word	0x080002fc
 80002d8:	080002fc 	.word	0x080002fc
 80002dc:	080002fc 	.word	0x080002fc
 80002e0:	08000300 	.word	0x08000300

080002e4 <_init>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	bf00      	nop
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr

080002f0 <_fini>:
 80002f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f2:	bf00      	nop
 80002f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f6:	bc08      	pop	{r3}
 80002f8:	469e      	mov	lr, r3
 80002fa:	4770      	bx	lr
