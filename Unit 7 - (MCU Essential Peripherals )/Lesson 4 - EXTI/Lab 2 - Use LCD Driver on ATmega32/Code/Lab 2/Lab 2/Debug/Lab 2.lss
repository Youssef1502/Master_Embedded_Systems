
Lab 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000024c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  0000024c  000002e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800076  00800076  000002f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000328  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cfa  00000000  00000000  000003ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000754  00000000  00000000  000010e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000518  00000000  00000000  0000183a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00001d54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042a  00000000  00000000  00001ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006cd  00000000  00000000  000022d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000299f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 37       	cpi	r26, 0x78	; 120
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  8a:	0c 94 24 01 	jmp	0x248	; 0x248 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_kick>:
	
	sprintf(str , "%s%d.%04d" , TempSign , TempInt1 , TempInt2);
	
	LCD_WRITE_STRING(str);
	
}
  92:	c3 9a       	sbi	0x18, 3	; 24
  94:	85 e0       	ldi	r24, 0x05	; 5
  96:	8a 95       	dec	r24
  98:	f1 f7       	brne	.-4      	; 0x96 <LCD_kick+0x4>
  9a:	00 00       	nop
  9c:	c3 98       	cbi	0x18, 3	; 24
  9e:	08 95       	ret

000000a0 <LCD_WRITE_COMMAND>:
  a0:	cf 93       	push	r28
  a2:	c8 2f       	mov	r28, r24
  a4:	8b b3       	in	r24, 0x1b	; 27
  a6:	8f 70       	andi	r24, 0x0F	; 15
  a8:	9c 2f       	mov	r25, r28
  aa:	90 7f       	andi	r25, 0xF0	; 240
  ac:	89 2b       	or	r24, r25
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	c1 98       	cbi	0x18, 1	; 24
  b2:	0e 94 49 00 	call	0x92	; 0x92 <LCD_kick>
  b6:	8f e1       	ldi	r24, 0x1F	; 31
  b8:	93 e0       	ldi	r25, 0x03	; 3
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <LCD_WRITE_COMMAND+0x1a>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <LCD_WRITE_COMMAND+0x20>
  c0:	00 00       	nop
  c2:	8b b3       	in	r24, 0x1b	; 27
  c4:	28 2f       	mov	r18, r24
  c6:	2f 70       	andi	r18, 0x0F	; 15
  c8:	30 e1       	ldi	r19, 0x10	; 16
  ca:	c3 9f       	mul	r28, r19
  cc:	c0 01       	movw	r24, r0
  ce:	11 24       	eor	r1, r1
  d0:	82 2b       	or	r24, r18
  d2:	8b bb       	out	0x1b, r24	; 27
  d4:	0e 94 49 00 	call	0x92	; 0x92 <LCD_kick>
  d8:	8f e3       	ldi	r24, 0x3F	; 63
  da:	9f e1       	ldi	r25, 0x1F	; 31
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_WRITE_COMMAND+0x3c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_WRITE_COMMAND+0x42>
  e2:	00 00       	nop
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <LCD_Init>:
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	8a bb       	out	0x1a, r24	; 26
  ec:	87 bb       	out	0x17, r24	; 23
  ee:	88 b3       	in	r24, 0x18	; 24
  f0:	84 70       	andi	r24, 0x04	; 4
  f2:	88 bb       	out	0x18, r24	; 24
  f4:	8f e5       	ldi	r24, 0x5F	; 95
  f6:	9a ee       	ldi	r25, 0xEA	; 234
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <LCD_Init+0x10>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <LCD_Init+0x16>
  fe:	00 00       	nop
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 106:	88 e2       	ldi	r24, 0x28	; 40
 108:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 10c:	8c e0       	ldi	r24, 0x0C	; 12
 10e:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 112:	86 e0       	ldi	r24, 0x06	; 6
 114:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 11e:	8f e3       	ldi	r24, 0x3F	; 63
 120:	9f e1       	ldi	r25, 0x1F	; 31
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_Init+0x3a>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_Init+0x40>
 128:	00 00       	nop
 12a:	08 95       	ret

0000012c <LCD_Clear>:
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 132:	8f e3       	ldi	r24, 0x3F	; 63
 134:	9f e1       	ldi	r25, 0x1F	; 31
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <LCD_Clear+0xa>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <LCD_Clear+0x10>
 13c:	00 00       	nop
 13e:	80 e8       	ldi	r24, 0x80	; 128
 140:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 144:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 148:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
 14c:	08 95       	ret

0000014e <LCD_WRITE_CHAR>:
 14e:	cf 93       	push	r28
 150:	c8 2f       	mov	r28, r24
 152:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 156:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 15a:	80 31       	cpi	r24, 0x10	; 16
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <LCD_WRITE_CHAR+0x1a>
 160:	80 ec       	ldi	r24, 0xC0	; 192
 162:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 166:	0b c0       	rjmp	.+22     	; 0x17e <LCD_WRITE_CHAR+0x30>
 168:	80 97       	sbiw	r24, 0x20	; 32
 16a:	49 f4       	brne	.+18     	; 0x17e <LCD_WRITE_CHAR+0x30>
 16c:	0e 94 96 00 	call	0x12c	; 0x12c <LCD_Clear>
 170:	80 e8       	ldi	r24, 0x80	; 128
 172:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 176:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 17a:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
 17e:	8b b3       	in	r24, 0x1b	; 27
 180:	8f 70       	andi	r24, 0x0F	; 15
 182:	9c 2f       	mov	r25, r28
 184:	90 7f       	andi	r25, 0xF0	; 240
 186:	89 2b       	or	r24, r25
 188:	8b bb       	out	0x1b, r24	; 27
 18a:	c1 9a       	sbi	0x18, 1	; 24
 18c:	0e 94 49 00 	call	0x92	; 0x92 <LCD_kick>
 190:	8f e1       	ldi	r24, 0x1F	; 31
 192:	93 e0       	ldi	r25, 0x03	; 3
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <LCD_WRITE_CHAR+0x46>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LCD_WRITE_CHAR+0x4c>
 19a:	00 00       	nop
 19c:	8b b3       	in	r24, 0x1b	; 27
 19e:	28 2f       	mov	r18, r24
 1a0:	2f 70       	andi	r18, 0x0F	; 15
 1a2:	30 e1       	ldi	r19, 0x10	; 16
 1a4:	c3 9f       	mul	r28, r19
 1a6:	c0 01       	movw	r24, r0
 1a8:	11 24       	eor	r1, r1
 1aa:	82 2b       	or	r24, r18
 1ac:	8b bb       	out	0x1b, r24	; 27
 1ae:	0e 94 49 00 	call	0x92	; 0x92 <LCD_kick>
 1b2:	8f e3       	ldi	r24, 0x3F	; 63
 1b4:	9c e9       	ldi	r25, 0x9C	; 156
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_WRITE_CHAR+0x68>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_WRITE_CHAR+0x6e>
 1bc:	00 00       	nop
 1be:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 1c2:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 1c6:	01 96       	adiw	r24, 0x01	; 1
 1c8:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x1>
 1cc:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 1d0:	9f ef       	ldi	r25, 0xFF	; 255
 1d2:	23 ec       	ldi	r18, 0xC3	; 195
 1d4:	39 e0       	ldi	r19, 0x09	; 9
 1d6:	91 50       	subi	r25, 0x01	; 1
 1d8:	20 40       	sbci	r18, 0x00	; 0
 1da:	30 40       	sbci	r19, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <LCD_WRITE_CHAR+0x88>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_WRITE_CHAR+0x92>
 1e0:	00 00       	nop
 1e2:	cf 91       	pop	r28
 1e4:	08 95       	ret

000001e6 <LCD_WRITE_STRING>:
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	ec 01       	movw	r28, r24
 1ec:	88 81       	ld	r24, Y
 1ee:	88 23       	and	r24, r24
 1f0:	31 f0       	breq	.+12     	; 0x1fe <LCD_WRITE_STRING+0x18>
 1f2:	21 96       	adiw	r28, 0x01	; 1
 1f4:	0e 94 a7 00 	call	0x14e	; 0x14e <LCD_WRITE_CHAR>
 1f8:	89 91       	ld	r24, Y+
 1fa:	81 11       	cpse	r24, r1
 1fc:	fb cf       	rjmp	.-10     	; 0x1f4 <LCD_WRITE_STRING+0xe>
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <Reset_Counter>:

void Reset_Counter()
{
count = 0;
 204:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 208:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
 20c:	08 95       	ret

0000020e <main>:
#include "LCD_Driver/LCD.h"

int main(void)
{
	int i=0;
    LCD_Init();
 20e:	0e 94 74 00 	call	0xe8	; 0xe8 <LCD_Init>
	
	LCD_WRITE_COMMAND(LCD_MOVE_CURSOR_RIGHT);
 212:	84 e1       	ldi	r24, 0x14	; 20
 214:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_MOVE_CURSOR_RIGHT);
 218:	84 e1       	ldi	r24, 0x14	; 20
 21a:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
	LCD_WRITE_STRING("YOUSSEF ADEL");
 21e:	80 e6       	ldi	r24, 0x60	; 96
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <LCD_WRITE_STRING>


	LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW);
 226:	80 ec       	ldi	r24, 0xC0	; 192
 228:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
	Reset_Counter();
 22c:	0e 94 02 01 	call	0x204	; 0x204 <Reset_Counter>
 230:	c5 e0       	ldi	r28, 0x05	; 5
 232:	d0 e0       	ldi	r29, 0x00	; 0
	for(i=0 ; i<5 ; i++)
	{
		LCD_WRITE_COMMAND(LCD_MOVE_CURSOR_RIGHT);
 234:	84 e1       	ldi	r24, 0x14	; 20
 236:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_WRITE_COMMAND>
 23a:	21 97       	sbiw	r28, 0x01	; 1
	LCD_WRITE_STRING("YOUSSEF ADEL");


	LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW);
	Reset_Counter();
	for(i=0 ; i<5 ; i++)
 23c:	d9 f7       	brne	.-10     	; 0x234 <main+0x26>
	{
		LCD_WRITE_COMMAND(LCD_MOVE_CURSOR_RIGHT);
	}
	LCD_WRITE_STRING("YOUSSEF");
 23e:	8d e6       	ldi	r24, 0x6D	; 109
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <LCD_WRITE_STRING>
 246:	ff cf       	rjmp	.-2      	; 0x246 <main+0x38>

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
